// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	"metrics/internal/store"
	"testing"

	"github.com/stretchr/testify/assert"
	mock "github.com/stretchr/testify/mock"
)

func TestMockStore_GetBatchMetrics(t *testing.T) {
	var mo []store.Metrics
	delt := int64(1111)
	mo = append(mo, store.Metrics{
		ID:    "PoolCount",
		Delta: &delt,
		MType: "counter",
	})
	mockStore := new(MockStore)
	mockStore.On("GetBatchMetrics", mock.Anything).Return(mo, true)

	type args struct {
		ctx context.Context
	}
	tests := []struct {
		name  string
		args  args
		want  int
		want1 bool
	}{
		{
			name: "positive test",
			args: args{
				ctx: context.Background(),
			},
			want:  1,
			want1: true,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {

			got, got1 := mockStore.GetBatchMetrics(tt.args.ctx)
			assert.Equal(t, tt.want, len(got))

			if got1 != tt.want1 {
				t.Errorf("MockStore.GetBatchMetrics() got1 = %v, want %v", got1, tt.want1)
			}
		})
	}
}
